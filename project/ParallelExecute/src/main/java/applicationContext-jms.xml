<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- 读取配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:distributed.properties</value>
			</list>
		</property>
	</bean>

	<!-- 配置connectionFactory -->
	<bean id="jmsFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
					<value>${mq.brokerURL}</value>
				</property>
			</bean>
		</property>
		<property name="maxConnections" value="100"></property>
	</bean>

	<!-- Spring JMS Template -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="jmsFactory" />
		</property>
		<property name="timeToLive" value="100000" />
		<property name="explicitQosEnabled" value="false" />
		<!-- 区别它采用的模式为false是p2p为true是订阅 -->
		<property name="pubSubDomain" value="true" />
		<property name="defaultDestinationName" value="subjectTopic" />
	</bean>

	<bean id="queueJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory">
			<ref local="jmsFactory" />
		</property>
		<property name="timeToLive" value="100000" />
		<property name="explicitQosEnabled" value="false" />
		<!-- 区别它采用的模式为false是p2p为true是订阅 -->
		<property name="pubSubDomain" value="false" />
		<property name="defaultDestinationName" value="subjectQueue" />
	</bean>

	<!-- 发送消息的目的地（一个队列） -->
	<bean id="RegisterDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="RegisterDestination" />
	</bean>

	<!-- 发送消息的目的地（一个队列） -->
	<bean id="HeartbeatDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息队列的名字 -->
		<constructor-arg index="0" value="HeartbeatDestination" />
	</bean>

	<!-- 发送消息的目的地（队列） -->
	<bean id="StartAppDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息目的名字,用于往结点代理发送指令 -->
		<constructor-arg index="0" value="StartAppDestination" />
	</bean>

	<!-- 发送消息的目的地（队列） -->
	<bean id="StopAppDestination" class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 设置消息目的名字,用于往结点代理发送指令 -->
		<constructor-arg index="0" value="StopAppDestination" />
	</bean>


	<!-- 执行资源调度的命令的接收逻辑类 -->
	<bean id="reciveSchedulingListener"
		class="com.css.sword.cloud.nodeagent.message.ReciveSchedulingListener">
	</bean>

	<!-- 接收广播命令 -->
	<jms:listener-container connection-factory="jmsFactory"
		destination-type="topic">

		<!-- 监听资源调度下发的命令 -->
		<jms:listener destination="SchedulingCommondNodeDestination"
			ref="reciveSchedulingListener" />
	</jms:listener-container>

</beans>
